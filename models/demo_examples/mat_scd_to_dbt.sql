
-- Run this model, to read the historical SCD table generated by Matillion, and add dbt Metadata required for Snapshot.
-- This model is a one-time execution and adds dbt_valid_from, dbt_valid_to etc; to the final table. We call this dim_customer_scd_snapshot

-- Add Snapshot code to read the new Source and write to the same Snapshot table. 
-- Snapshot functionality will check the historical data, set dbt_valid_to to the right value, and add the New record


-- Gotchas: 
-- Rename the alias in the model, so it doesn't conflict with the actual Snapshot code.



{{
    config(
        materialized='table',
        alias='dim_account_scd_snapshot___'
    )
}}


with 

hist_snapshot as (
select {{dbt_utils.generate_surrogate_key([
            'EBXLOCALID',
            'BUSINESS_REPORTING_PERIOD'
        ])}} as account_period_id,
        *
        from {{ source('tpch', 'mat_history_table') }}
),

generate_dbt_metadata as (
    select 
        md5(cast(coalesce(cast(account_period_id as TEXT), '_dbt_utils_surrogate_key_null_') || '|' || coalesce(cast(LASTMODIFIEDDATE as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as dbt_scd_id,
        account_period_id as account_period_id,
        ebxlocalid as ebx_local_id,
        business_reporting_period,
        glaccountcode,
        name as account_name,
        effectivebegindate as dbt_valid_from,
        CASE WHEN effectiveenddate='2999-12-31T00:00:00Z' THEN null else effectiveenddate END as dbt_valid_to,
        lastmodifieddate as updated_at,
        lastmodifieddate as dbt_updated_at
    
     from hist_snapshot
),


final as (

    select * from generate_dbt_metadata

)

select * from final

